
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftANDORnonassocGREATERLESSleftPLUSMINUSleftTIMESDIVIDEAND ASSIGN BOOL CHAR DECREASE DECREMENT DIVIDE DOUBLE ELSE ELSEIF EQUALS FLOAT FOR GREATER IF INCREASE INCREMENT INT LBRACKET LESS LPAREN MINUS MULTI_COMMENT NAME NOTEQUALS NUMBER OR PLUS PRINT RBRACKET RPAREN SCAN SEMICOLON SIMPLE_COMMENT STRING STRING TIMES TOAMSCAN WHILEstart : blocbloc : bloc statement SEMICOLON\n            | statement SEMICOLON\n            | bloc SIMPLE_COMMENT\n            | SIMPLE_COMMENT\n            | bloc MULTI_COMMENT\n            | MULTI_COMMENTstatement : PRINT LPAREN expression RPAREN\n        | PRINT LPAREN STRING RPARENstatement : IF LPAREN expression RPAREN LBRACKET bloc RBRACKET\n        | IF LPAREN expression RPAREN LBRACKET bloc RBRACKET ELSE LBRACKET bloc RBRACKETstatement : WHILE LPAREN expression RPAREN LBRACKET bloc RBRACKETstatement : FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LBRACKET bloc RBRACKETstatement : TOAMSCAN LPAREN NAME RPARENstatement : NAME ASSIGN SCAN LPAREN RPARENstatement : INT NAME ASSIGN expression\n        | FLOAT NAME ASSIGN expression\n        | DOUBLE NAME ASSIGN expression\n        | STRING NAME ASSIGN expression\n        | CHAR NAME ASSIGN expression\n        | BOOL NAME ASSIGN expressionexpression : expression MINUS expression\n\t\t\t\t| expression DIVIDE expression\n\t\t\t\t| expression PLUS expression\n\t\t\t\t| expression TIMES expressionexpression : LPAREN expression RPARENexpression : NUMBERexpression : NAMEexpression : STRINGexpression : expression AND expression\n                | expression OR expression\n                | expression GREATER expression\n                | expression LESS expression\n                | expression EQUALS expression\n                | expression NOTEQUALS expressionstatement : NAME INCREMENT\n                | NAME DECREMENT\n                | NAME INCREASE expression\n                | NAME DECREASE expression'
    
_lr_action_items = {'SIMPLE_COMMENT':([0,2,4,5,19,20,21,38,93,94,97,98,105,106,107,108,],[4,19,-5,-7,-4,-6,-3,-2,4,4,19,19,4,4,19,19,]),'MULTI_COMMENT':([0,2,4,5,19,20,21,38,93,94,97,98,105,106,107,108,],[5,20,-5,-7,-4,-6,-3,-2,5,5,20,20,5,5,20,20,]),'PRINT':([0,2,4,5,19,20,21,26,38,93,94,97,98,99,105,106,107,108,],[6,6,-5,-7,-4,-6,-3,6,-2,6,6,6,6,6,6,6,6,6,]),'IF':([0,2,4,5,19,20,21,26,38,93,94,97,98,99,105,106,107,108,],[8,8,-5,-7,-4,-6,-3,8,-2,8,8,8,8,8,8,8,8,8,]),'WHILE':([0,2,4,5,19,20,21,26,38,93,94,97,98,99,105,106,107,108,],[9,9,-5,-7,-4,-6,-3,9,-2,9,9,9,9,9,9,9,9,9,]),'FOR':([0,2,4,5,19,20,21,26,38,93,94,97,98,99,105,106,107,108,],[10,10,-5,-7,-4,-6,-3,10,-2,10,10,10,10,10,10,10,10,10,]),'TOAMSCAN':([0,2,4,5,19,20,21,26,38,93,94,97,98,99,105,106,107,108,],[11,11,-5,-7,-4,-6,-3,11,-2,11,11,11,11,11,11,11,11,11,]),'NAME':([0,2,4,5,7,13,14,15,16,17,19,20,21,22,24,25,26,27,31,32,38,39,44,53,54,55,56,57,60,61,62,63,64,65,66,67,68,69,74,93,94,97,98,99,105,106,107,108,],[12,12,-5,-7,23,33,34,35,36,37,-4,-6,-3,43,43,43,12,49,43,43,-2,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,12,12,12,12,12,12,12,12,12,]),'INT':([0,2,4,5,19,20,21,26,38,93,94,97,98,99,105,106,107,108,],[13,13,-5,-7,-4,-6,-3,13,-2,13,13,13,13,13,13,13,13,13,]),'FLOAT':([0,2,4,5,19,20,21,26,38,93,94,97,98,99,105,106,107,108,],[14,14,-5,-7,-4,-6,-3,14,-2,14,14,14,14,14,14,14,14,14,]),'DOUBLE':([0,2,4,5,19,20,21,26,38,93,94,97,98,99,105,106,107,108,],[15,15,-5,-7,-4,-6,-3,15,-2,15,15,15,15,15,15,15,15,15,]),'STRING':([0,2,4,5,19,20,21,22,24,25,26,31,32,38,39,44,53,54,55,56,57,60,61,62,63,64,65,66,67,68,69,74,93,94,97,98,99,105,106,107,108,],[7,7,-5,-7,-4,-6,-3,41,46,46,7,46,46,-2,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,7,7,7,7,7,7,7,7,7,]),'CHAR':([0,2,4,5,19,20,21,26,38,93,94,97,98,99,105,106,107,108,],[16,16,-5,-7,-4,-6,-3,16,-2,16,16,16,16,16,16,16,16,16,]),'BOOL':([0,2,4,5,19,20,21,26,38,93,94,97,98,99,105,106,107,108,],[17,17,-5,-7,-4,-6,-3,17,-2,17,17,17,17,17,17,17,17,17,]),'$end':([1,2,4,5,19,20,21,38,],[0,-1,-5,-7,-4,-6,-3,-2,]),'SEMICOLON':([3,18,29,30,42,43,46,48,51,52,59,70,71,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,95,96,100,101,109,110,],[21,38,-36,-37,-27,-28,-29,74,-38,-39,-8,-9,-19,-14,-16,-17,-18,-20,-21,-26,-22,-23,-24,-25,-30,-31,-32,-33,-34,-35,99,-15,-10,-12,-11,-13,]),'RBRACKET':([4,5,19,20,21,38,97,98,107,108,],[-5,-7,-4,-6,-3,-2,100,101,109,110,]),'LPAREN':([6,8,9,10,11,22,24,25,31,32,39,44,50,53,54,55,56,57,60,61,62,63,64,65,66,67,68,69,74,],[22,24,25,26,27,39,39,39,39,39,39,39,76,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'ASSIGN':([12,23,33,34,35,36,37,],[28,44,53,54,55,56,57,]),'INCREMENT':([12,],[29,]),'DECREMENT':([12,],[30,]),'INCREASE':([12,],[31,]),'DECREASE':([12,],[32,]),'NUMBER':([22,24,25,31,32,39,44,53,54,55,56,57,60,61,62,63,64,65,66,67,68,69,74,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'SCAN':([28,],[50,]),'RPAREN':([29,30,40,41,42,43,45,46,47,49,51,52,58,59,70,71,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,96,100,101,102,109,110,],[-36,-37,59,70,-27,-28,72,-29,73,75,-38,-39,82,-8,-9,-19,-14,96,-16,-17,-18,-20,-21,-26,-22,-23,-24,-25,-30,-31,-32,-33,-34,-35,-15,-10,-12,104,-11,-13,]),'MINUS':([40,41,42,43,45,46,47,51,52,58,71,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,95,],[60,-29,-27,-28,60,-29,60,60,60,60,60,60,60,60,60,60,-26,-22,-23,-24,-25,60,60,60,60,60,60,60,]),'DIVIDE':([40,41,42,43,45,46,47,51,52,58,71,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,95,],[61,-29,-27,-28,61,-29,61,61,61,61,61,61,61,61,61,61,-26,61,-23,61,-25,61,61,61,61,61,61,61,]),'PLUS':([40,41,42,43,45,46,47,51,52,58,71,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,95,],[62,-29,-27,-28,62,-29,62,62,62,62,62,62,62,62,62,62,-26,-22,-23,-24,-25,62,62,62,62,62,62,62,]),'TIMES':([40,41,42,43,45,46,47,51,52,58,71,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,95,],[63,-29,-27,-28,63,-29,63,63,63,63,63,63,63,63,63,63,-26,63,-23,63,-25,63,63,63,63,63,63,63,]),'AND':([40,41,42,43,45,46,47,51,52,58,71,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,95,],[64,-29,-27,-28,64,-29,64,64,64,64,64,64,64,64,64,64,-26,-22,-23,-24,-25,-30,-31,-32,-33,64,64,64,]),'OR':([40,41,42,43,45,46,47,51,52,58,71,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,95,],[65,-29,-27,-28,65,-29,65,65,65,65,65,65,65,65,65,65,-26,-22,-23,-24,-25,-30,-31,-32,-33,65,65,65,]),'GREATER':([40,41,42,43,45,46,47,51,52,58,71,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,95,],[66,-29,-27,-28,66,-29,66,66,66,66,66,66,66,66,66,66,-26,-22,-23,-24,-25,66,66,None,None,66,66,66,]),'LESS':([40,41,42,43,45,46,47,51,52,58,71,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,95,],[67,-29,-27,-28,67,-29,67,67,67,67,67,67,67,67,67,67,-26,-22,-23,-24,-25,67,67,None,None,67,67,67,]),'EQUALS':([40,41,42,43,45,46,47,51,52,58,71,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,95,],[68,-29,-27,-28,68,-29,68,68,68,68,68,68,68,68,68,68,-26,-22,-23,-24,-25,-30,-31,-32,-33,68,68,68,]),'NOTEQUALS':([40,41,42,43,45,46,47,51,52,58,71,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,95,],[69,-29,-27,-28,69,-29,69,69,69,69,69,69,69,69,69,69,-26,-22,-23,-24,-25,-30,-31,-32,-33,69,69,69,]),'LBRACKET':([72,73,103,104,],[93,94,105,106,]),'ELSE':([100,],[103,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'bloc':([0,93,94,105,106,],[2,97,98,107,108,]),'statement':([0,2,26,93,94,97,98,99,105,106,107,108,],[3,18,48,3,3,18,18,102,3,3,18,18,]),'expression':([22,24,25,31,32,39,44,53,54,55,56,57,60,61,62,63,64,65,66,67,68,69,74,],[40,45,47,51,52,58,71,77,78,79,80,81,83,84,85,86,87,88,89,90,91,92,95,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> bloc','start',1,'p_start','interpreter.py',107),
  ('bloc -> bloc statement SEMICOLON','bloc',3,'p_bloc','interpreter.py',115),
  ('bloc -> statement SEMICOLON','bloc',2,'p_bloc','interpreter.py',116),
  ('bloc -> bloc SIMPLE_COMMENT','bloc',2,'p_bloc','interpreter.py',117),
  ('bloc -> SIMPLE_COMMENT','bloc',1,'p_bloc','interpreter.py',118),
  ('bloc -> bloc MULTI_COMMENT','bloc',2,'p_bloc','interpreter.py',119),
  ('bloc -> MULTI_COMMENT','bloc',1,'p_bloc','interpreter.py',120),
  ('statement -> PRINT LPAREN expression RPAREN','statement',4,'p_statement_expr','interpreter.py',130),
  ('statement -> PRINT LPAREN STRING RPAREN','statement',4,'p_statement_expr','interpreter.py',131),
  ('statement -> IF LPAREN expression RPAREN LBRACKET bloc RBRACKET','statement',7,'p_statement_if','interpreter.py',136),
  ('statement -> IF LPAREN expression RPAREN LBRACKET bloc RBRACKET ELSE LBRACKET bloc RBRACKET','statement',11,'p_statement_if','interpreter.py',137),
  ('statement -> WHILE LPAREN expression RPAREN LBRACKET bloc RBRACKET','statement',7,'p_statement_while','interpreter.py',145),
  ('statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LBRACKET bloc RBRACKET','statement',11,'p_statement_for','interpreter.py',150),
  ('statement -> TOAMSCAN LPAREN NAME RPAREN','statement',4,'p_statement_toamScan','interpreter.py',156),
  ('statement -> NAME ASSIGN SCAN LPAREN RPAREN','statement',5,'p_statement_scan','interpreter.py',161),
  ('statement -> INT NAME ASSIGN expression','statement',4,'p_statement_assign','interpreter.py',166),
  ('statement -> FLOAT NAME ASSIGN expression','statement',4,'p_statement_assign','interpreter.py',167),
  ('statement -> DOUBLE NAME ASSIGN expression','statement',4,'p_statement_assign','interpreter.py',168),
  ('statement -> STRING NAME ASSIGN expression','statement',4,'p_statement_assign','interpreter.py',169),
  ('statement -> CHAR NAME ASSIGN expression','statement',4,'p_statement_assign','interpreter.py',170),
  ('statement -> BOOL NAME ASSIGN expression','statement',4,'p_statement_assign','interpreter.py',171),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop_operations','interpreter.py',176),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop_operations','interpreter.py',177),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop_operations','interpreter.py',178),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop_operations','interpreter.py',179),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','interpreter.py',184),
  ('expression -> NUMBER','expression',1,'p_expression_number','interpreter.py',189),
  ('expression -> NAME','expression',1,'p_expression_name','interpreter.py',194),
  ('expression -> STRING','expression',1,'p_expression_string','interpreter.py',200),
  ('expression -> expression AND expression','expression',3,'p_expression_binop_bool','interpreter.py',205),
  ('expression -> expression OR expression','expression',3,'p_expression_binop_bool','interpreter.py',206),
  ('expression -> expression GREATER expression','expression',3,'p_expression_binop_bool','interpreter.py',207),
  ('expression -> expression LESS expression','expression',3,'p_expression_binop_bool','interpreter.py',208),
  ('expression -> expression EQUALS expression','expression',3,'p_expression_binop_bool','interpreter.py',209),
  ('expression -> expression NOTEQUALS expression','expression',3,'p_expression_binop_bool','interpreter.py',210),
  ('statement -> NAME INCREMENT','statement',2,'p_expression_incr_decr','interpreter.py',215),
  ('statement -> NAME DECREMENT','statement',2,'p_expression_incr_decr','interpreter.py',216),
  ('statement -> NAME INCREASE expression','statement',3,'p_expression_incr_decr','interpreter.py',217),
  ('statement -> NAME DECREASE expression','statement',3,'p_expression_incr_decr','interpreter.py',218),
]


# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftANDORnonassocGREATERLESSleftPLUSMINUSleftTIMESDIVIDEAND DECREASE DECREMENT DIVIDE EQUALS GREATER INCREASE INCREMENT LESS LPAREN MINUS MULTI_COMMENT NAME NUMBER OR PLUS PRINT PRINTSTRING RPAREN SCAN SEMICOLON SIMPLE_COMMENT STRING TIMES TOAMSCANstart : statement SEMICOLON start\n            | statement SEMICOLON\n            | SIMPLE_COMMENT start\n            | SIMPLE_COMMENT\n            | MULTI_COMMENT start\n            | MULTI_COMMENTstatement : PRINT LPAREN expression RPAREN\n        | PRINTSTRING LPAREN STRING RPARENstatement : TOAMSCAN LPAREN NAME RPARENstatement : NAME EQUALS SCAN LPAREN RPARENstatement : NAME EQUALS expressionexpression : expression MINUS expression\n\t\t\t\t| expression DIVIDE expression\n\t\t\t\t| expression PLUS expression\n\t\t\t\t| expression TIMES expressionexpression : LPAREN expression RPARENexpression : NUMBERexpression : NAMEexpression : STRINGexpression : expression AND expression\n                | expression OR expression\n                | expression GREATER expression\n                | expression LESS expressionexpression : expression GREATER expression GREATER expressionexpression : NAME INCREMENT\n                | NAME DECREMENT\n                | NAME INCREASE expression\n                | NAME DECREASE expression'
    
_lr_action_items = {'SIMPLE_COMMENT':([0,3,4,9,],[3,3,3,3,]),'MULTI_COMMENT':([0,3,4,9,],[4,4,4,4,]),'PRINT':([0,3,4,9,],[5,5,5,5,]),'PRINTSTRING':([0,3,4,9,],[6,6,6,6,]),'TOAMSCAN':([0,3,4,9,],[7,7,7,7,]),'NAME':([0,3,4,9,12,14,15,17,28,29,30,31,32,33,34,35,38,39,55,],[8,8,8,8,20,23,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'$end':([1,3,4,9,10,11,16,],[0,-4,-6,-2,-3,-5,-1,]),'SEMICOLON':([2,19,20,21,25,27,36,37,40,41,43,44,45,46,47,48,49,50,51,52,53,54,56,],[9,-17,-18,-19,-11,-7,-25,-26,-8,-9,-16,-12,-13,-14,-15,-20,-21,-22,-23,-27,-28,-10,-22,]),'LPAREN':([5,6,7,12,15,17,24,28,29,30,31,32,33,34,35,38,39,55,],[12,13,14,17,17,17,42,17,17,17,17,17,17,17,17,17,17,17,]),'EQUALS':([8,],[15,]),'NUMBER':([12,15,17,28,29,30,31,32,33,34,35,38,39,55,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'STRING':([12,13,15,17,28,29,30,31,32,33,34,35,38,39,55,],[21,22,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'SCAN':([15,],[24,]),'RPAREN':([18,19,20,21,22,23,26,36,37,42,43,44,45,46,47,48,49,50,51,52,53,56,],[27,-17,-18,-19,40,41,43,-25,-26,54,-16,-12,-13,-14,-15,-20,-21,-22,-23,-27,-28,-22,]),'MINUS':([18,19,20,21,25,26,36,37,43,44,45,46,47,48,49,50,51,52,53,56,],[28,-17,-18,-19,28,28,-25,-26,-16,-12,-13,-14,-15,28,28,28,28,28,28,28,]),'DIVIDE':([18,19,20,21,25,26,36,37,43,44,45,46,47,48,49,50,51,52,53,56,],[29,-17,-18,-19,29,29,-25,-26,-16,29,-13,29,-15,29,29,29,29,29,29,29,]),'PLUS':([18,19,20,21,25,26,36,37,43,44,45,46,47,48,49,50,51,52,53,56,],[30,-17,-18,-19,30,30,-25,-26,-16,-12,-13,-14,-15,30,30,30,30,30,30,30,]),'TIMES':([18,19,20,21,25,26,36,37,43,44,45,46,47,48,49,50,51,52,53,56,],[31,-17,-18,-19,31,31,-25,-26,-16,31,-13,31,-15,31,31,31,31,31,31,31,]),'AND':([18,19,20,21,25,26,36,37,43,44,45,46,47,48,49,50,51,52,53,56,],[32,-17,-18,-19,32,32,-25,-26,-16,-12,-13,-14,-15,-20,-21,-22,-23,32,32,-22,]),'OR':([18,19,20,21,25,26,36,37,43,44,45,46,47,48,49,50,51,52,53,56,],[33,-17,-18,-19,33,33,-25,-26,-16,-12,-13,-14,-15,-20,-21,-22,-23,33,33,-22,]),'GREATER':([18,19,20,21,25,26,36,37,43,44,45,46,47,48,49,50,51,52,53,56,],[34,-17,-18,-19,34,34,-25,-26,-16,-12,-13,-14,-15,34,34,55,34,34,34,55,]),'LESS':([18,19,20,21,25,26,36,37,43,44,45,46,47,48,49,50,51,52,53,56,],[35,-17,-18,-19,35,35,-25,-26,-16,-12,-13,-14,-15,35,35,None,None,35,35,None,]),'INCREMENT':([20,],[36,]),'DECREMENT':([20,],[37,]),'INCREASE':([20,],[38,]),'DECREASE':([20,],[39,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,3,4,9,],[1,10,11,16,]),'statement':([0,3,4,9,],[2,2,2,2,]),'expression':([12,15,17,28,29,30,31,32,33,34,35,38,39,55,],[18,25,26,44,45,46,47,48,49,50,51,52,53,56,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> statement SEMICOLON start','start',3,'p_bloc','calcBase.py',89),
  ('start -> statement SEMICOLON','start',2,'p_bloc','calcBase.py',90),
  ('start -> SIMPLE_COMMENT start','start',2,'p_bloc','calcBase.py',91),
  ('start -> SIMPLE_COMMENT','start',1,'p_bloc','calcBase.py',92),
  ('start -> MULTI_COMMENT start','start',2,'p_bloc','calcBase.py',93),
  ('start -> MULTI_COMMENT','start',1,'p_bloc','calcBase.py',94),
  ('statement -> PRINT LPAREN expression RPAREN','statement',4,'p_statement_expr','calcBase.py',98),
  ('statement -> PRINTSTRING LPAREN STRING RPAREN','statement',4,'p_statement_expr','calcBase.py',99),
  ('statement -> TOAMSCAN LPAREN NAME RPAREN','statement',4,'p_statement_toamScan','calcBase.py',104),
  ('statement -> NAME EQUALS SCAN LPAREN RPAREN','statement',5,'p_statement_scan','calcBase.py',108),
  ('statement -> NAME EQUALS expression','statement',3,'p_statement_assign','calcBase.py',113),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop_operations','calcBase.py',118),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop_operations','calcBase.py',119),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop_operations','calcBase.py',120),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop_operations','calcBase.py',121),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','calcBase.py',133),
  ('expression -> NUMBER','expression',1,'p_expression_number','calcBase.py',138),
  ('expression -> NAME','expression',1,'p_expression_name','calcBase.py',143),
  ('expression -> STRING','expression',1,'p_expression_string','calcBase.py',147),
  ('expression -> expression AND expression','expression',3,'p_expression_binop_bool','calcBase.py',151),
  ('expression -> expression OR expression','expression',3,'p_expression_binop_bool','calcBase.py',152),
  ('expression -> expression GREATER expression','expression',3,'p_expression_binop_bool','calcBase.py',153),
  ('expression -> expression LESS expression','expression',3,'p_expression_binop_bool','calcBase.py',154),
  ('expression -> expression GREATER expression GREATER expression','expression',5,'p_expression_compare','calcBase.py',166),
  ('expression -> NAME INCREMENT','expression',2,'p_expression_incr_decr','calcBase.py',171),
  ('expression -> NAME DECREMENT','expression',2,'p_expression_incr_decr','calcBase.py',172),
  ('expression -> NAME INCREASE expression','expression',3,'p_expression_incr_decr','calcBase.py',173),
  ('expression -> NAME DECREASE expression','expression',3,'p_expression_incr_decr','calcBase.py',174),
]

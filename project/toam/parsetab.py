
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftANDORnonassocGREATERLESSleftPLUSMINUSleftTIMESDIVIDEAND ASSIGN BOOL CHAR CHARCHAIN COMMA DECREASE DECREMENT DIVIDE ELSE ELSEIF EQUALS FALSE FALSE FLOAT FOR FUNCTION GREATER GREATEREQUALS IF INCREASE INCREMENT INT LBRACKET LESS LESSEQUALS LPAREN MINUS MULTI_COMMENT NAME NOTEQUALS NUMBER OR PLUS PRINT RBRACKET RETURN RPAREN SCAN SEMICOLON SIMPLE_COMMENT STRING TIMES TOAMSCAN TRUE TRUE VOID WHILEstart : blocbloc : bloc statement SEMICOLON\n            | statement SEMICOLON\n            | bloc SIMPLE_COMMENT\n            | SIMPLE_COMMENT\n            | bloc MULTI_COMMENT\n            | MULTI_COMMENTstatement : FUNCTION RETURNTYPE NAME LPAREN PARAMS RPAREN LBRACKET bloc RBRACKET\n                | FUNCTION RETURNTYPE NAME LPAREN RPAREN LBRACKET bloc RBRACKETPARAMS : TYPE NAME\n                | TYPE NAME COMMA PARAMSstatement : PRINT LPAREN expression RPAREN\n        | PRINT LPAREN CHARCHAIN RPARENstatement : IF LPAREN expression RPAREN LBRACKET bloc RBRACKET\n        | IF LPAREN expression RPAREN LBRACKET bloc RBRACKET ELSE LBRACKET bloc RBRACKETstatement : WHILE LPAREN expression RPAREN LBRACKET bloc RBRACKETstatement : FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LBRACKET bloc RBRACKETstatement : TOAMSCAN LPAREN NAME RPARENstatement : NAME ASSIGN SCAN LPAREN RPARENstatement : TYPE NAME ASSIGN expression\n        | NAME ASSIGN expressionexpression : expression MINUS expression\n\t\t\t\t| expression DIVIDE expression\n\t\t\t\t| expression PLUS expression\n\t\t\t\t| expression TIMES expressionexpression : LPAREN expression RPARENexpression : NUMBERexpression : BOOLEANexpression : NAMEFUNCPARAMS : expression\n                | expression COMMA FUNCPARAMSexpression : NAME LPAREN RPAREN\n        | NAME LPAREN FUNCPARAMS RPARENstatement : NAME LPAREN RPAREN\n        | NAME LPAREN FUNCPARAMS RPARENTYPE : INT\n            | FLOAT\n            | CHAR\n            | STRING\n            | BOOLRETURNTYPE : TYPE\n            | VOIDstatement : RETURN expression\n        | RETURN statement\n        | RETURNBOOLEAN : TRUE\n                | FALSEexpression : CHARCHAINexpression : expression AND expression\n                | expression OR expression\n                | expression GREATER expression\n                | expression LESS expression\n                | expression EQUALS expression\n                | expression NOTEQUALS expression\n                | expression GREATEREQUALS expression\n                | expression LESSEQUALS expressionstatement : NAME INCREMENT\n                | NAME DECREMENT\n                | NAME INCREASE expression\n                | NAME DECREASE expression'
    
_lr_action_items = {'SIMPLE_COMMENT':([0,2,4,5,21,22,23,48,113,114,118,121,122,124,125,130,136,137,138,139,],[4,21,-5,-7,-4,-6,-3,-2,4,4,4,21,21,4,21,21,4,4,21,21,]),'MULTI_COMMENT':([0,2,4,5,21,22,23,48,113,114,118,121,122,124,125,130,136,137,138,139,],[5,22,-5,-7,-4,-6,-3,-2,5,5,5,22,22,5,22,22,5,5,22,22,]),'FUNCTION':([0,2,4,5,14,21,22,23,36,48,113,114,118,121,122,123,124,125,130,136,137,138,139,],[6,6,-5,-7,6,-4,-6,-3,6,-2,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'PRINT':([0,2,4,5,14,21,22,23,36,48,113,114,118,121,122,123,124,125,130,136,137,138,139,],[8,8,-5,-7,8,-4,-6,-3,8,-2,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'IF':([0,2,4,5,14,21,22,23,36,48,113,114,118,121,122,123,124,125,130,136,137,138,139,],[9,9,-5,-7,9,-4,-6,-3,9,-2,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'WHILE':([0,2,4,5,14,21,22,23,36,48,113,114,118,121,122,123,124,125,130,136,137,138,139,],[10,10,-5,-7,10,-4,-6,-3,10,-2,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'FOR':([0,2,4,5,14,21,22,23,36,48,113,114,118,121,122,123,124,125,130,136,137,138,139,],[11,11,-5,-7,11,-4,-6,-3,11,-2,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'TOAMSCAN':([0,2,4,5,14,21,22,23,36,48,113,114,118,121,122,123,124,125,130,136,137,138,139,],[12,12,-5,-7,12,-4,-6,-3,12,-2,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'NAME':([0,2,4,5,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,31,32,33,34,35,36,37,41,48,64,65,66,67,68,69,70,71,72,73,74,75,76,78,80,83,88,108,113,114,118,121,122,123,124,125,130,136,137,138,139,],[7,7,-5,-7,38,44,-36,-37,-38,-39,-40,-4,-6,-3,49,-41,-42,50,50,50,50,50,50,50,7,63,50,-2,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,119,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'RETURN':([0,2,4,5,14,21,22,23,36,48,113,114,118,121,122,123,124,125,130,136,137,138,139,],[14,14,-5,-7,14,-4,-6,-3,14,-2,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'INT':([0,2,4,5,6,14,21,22,23,36,48,79,113,114,118,121,122,123,124,125,126,130,136,137,138,139,],[15,15,-5,-7,15,15,-4,-6,-3,15,-2,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'FLOAT':([0,2,4,5,6,14,21,22,23,36,48,79,113,114,118,121,122,123,124,125,126,130,136,137,138,139,],[16,16,-5,-7,16,16,-4,-6,-3,16,-2,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'CHAR':([0,2,4,5,6,14,21,22,23,36,48,79,113,114,118,121,122,123,124,125,126,130,136,137,138,139,],[17,17,-5,-7,17,17,-4,-6,-3,17,-2,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'STRING':([0,2,4,5,6,14,21,22,23,36,48,79,113,114,118,121,122,123,124,125,126,130,136,137,138,139,],[18,18,-5,-7,18,18,-4,-6,-3,18,-2,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'BOOL':([0,2,4,5,6,14,21,22,23,36,48,79,113,114,118,121,122,123,124,125,126,130,136,137,138,139,],[19,19,-5,-7,19,19,-4,-6,-3,19,-2,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'$end':([1,2,4,5,21,22,23,48,],[0,-1,-5,-7,-4,-6,-3,-2,]),'SEMICOLON':([3,14,20,29,30,39,40,42,43,44,45,46,47,50,52,53,56,57,62,82,84,85,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,109,111,115,116,120,127,128,131,135,140,141,],[23,-45,48,-57,-58,-43,-44,-27,-28,-29,-48,-46,-47,-29,-21,-34,-59,-60,88,-35,-12,-13,-18,-20,-22,-23,-24,-25,-49,-50,-51,-52,-53,-54,-55,-56,-26,-32,-32,-19,123,-33,-33,-14,-16,-9,-8,-15,-17,]),'RBRACKET':([4,5,21,22,23,48,121,122,125,130,138,139,],[-5,-7,-4,-6,-3,-2,127,128,131,135,140,141,]),'VOID':([6,],[26,]),'ASSIGN':([7,38,44,],[27,64,27,]),'LPAREN':([7,8,9,10,11,12,14,27,28,31,32,33,34,35,41,44,49,50,51,64,65,66,67,68,69,70,71,72,73,74,75,76,78,80,83,88,],[28,33,34,35,36,37,41,41,41,41,41,41,41,41,41,78,79,80,81,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'INCREMENT':([7,44,],[29,29,]),'DECREMENT':([7,44,],[30,30,]),'INCREASE':([7,44,],[31,31,]),'DECREASE':([7,44,],[32,32,]),'RPAREN':([14,28,29,30,39,40,42,43,44,45,46,47,50,52,53,54,55,56,57,58,59,60,61,63,77,78,79,80,81,82,84,85,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,109,110,111,112,116,119,120,127,128,129,131,132,135,140,141,],[-45,53,-57,-58,-43,-44,-27,-28,-29,-48,-46,-47,-29,-21,-34,82,-30,-59,-60,84,85,86,87,89,103,104,107,109,111,-35,-12,-13,-18,-20,-22,-23,-24,-25,-49,-50,-51,-52,-53,-54,-55,-56,-26,-32,116,117,-32,120,-19,-31,-33,-10,-33,-14,-16,134,-9,-11,-8,-15,-17,]),'NUMBER':([14,27,28,31,32,33,34,35,41,64,65,66,67,68,69,70,71,72,73,74,75,76,78,80,83,88,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'CHARCHAIN':([14,27,28,31,32,33,34,35,41,64,65,66,67,68,69,70,71,72,73,74,75,76,78,80,83,88,],[45,45,45,45,45,59,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'TRUE':([14,27,28,31,32,33,34,35,41,64,65,66,67,68,69,70,71,72,73,74,75,76,78,80,83,88,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'FALSE':([14,27,28,31,32,33,34,35,41,64,65,66,67,68,69,70,71,72,73,74,75,76,78,80,83,88,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'SCAN':([27,],[51,]),'MINUS':([39,42,43,44,45,46,47,50,52,55,56,57,58,59,60,61,77,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,109,115,116,120,],[65,-27,-28,-29,-48,-46,-47,-29,65,65,65,65,65,-48,65,65,65,65,-22,-23,-24,-25,65,65,65,65,65,65,65,65,-26,-32,-32,65,-33,-33,]),'DIVIDE':([39,42,43,44,45,46,47,50,52,55,56,57,58,59,60,61,77,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,109,115,116,120,],[66,-27,-28,-29,-48,-46,-47,-29,66,66,66,66,66,-48,66,66,66,66,66,-23,66,-25,66,66,66,66,66,66,66,66,-26,-32,-32,66,-33,-33,]),'PLUS':([39,42,43,44,45,46,47,50,52,55,56,57,58,59,60,61,77,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,109,115,116,120,],[67,-27,-28,-29,-48,-46,-47,-29,67,67,67,67,67,-48,67,67,67,67,-22,-23,-24,-25,67,67,67,67,67,67,67,67,-26,-32,-32,67,-33,-33,]),'TIMES':([39,42,43,44,45,46,47,50,52,55,56,57,58,59,60,61,77,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,109,115,116,120,],[68,-27,-28,-29,-48,-46,-47,-29,68,68,68,68,68,-48,68,68,68,68,68,-23,68,-25,68,68,68,68,68,68,68,68,-26,-32,-32,68,-33,-33,]),'AND':([39,42,43,44,45,46,47,50,52,55,56,57,58,59,60,61,77,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,109,115,116,120,],[69,-27,-28,-29,-48,-46,-47,-29,69,69,69,69,69,-48,69,69,69,69,-22,-23,-24,-25,-49,-50,-51,-52,69,69,69,69,-26,-32,-32,69,-33,-33,]),'OR':([39,42,43,44,45,46,47,50,52,55,56,57,58,59,60,61,77,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,109,115,116,120,],[70,-27,-28,-29,-48,-46,-47,-29,70,70,70,70,70,-48,70,70,70,70,-22,-23,-24,-25,-49,-50,-51,-52,70,70,70,70,-26,-32,-32,70,-33,-33,]),'GREATER':([39,42,43,44,45,46,47,50,52,55,56,57,58,59,60,61,77,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,109,115,116,120,],[71,-27,-28,-29,-48,-46,-47,-29,71,71,71,71,71,-48,71,71,71,71,-22,-23,-24,-25,71,71,None,None,71,71,71,71,-26,-32,-32,71,-33,-33,]),'LESS':([39,42,43,44,45,46,47,50,52,55,56,57,58,59,60,61,77,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,109,115,116,120,],[72,-27,-28,-29,-48,-46,-47,-29,72,72,72,72,72,-48,72,72,72,72,-22,-23,-24,-25,72,72,None,None,72,72,72,72,-26,-32,-32,72,-33,-33,]),'EQUALS':([39,42,43,44,45,46,47,50,52,55,56,57,58,59,60,61,77,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,109,115,116,120,],[73,-27,-28,-29,-48,-46,-47,-29,73,73,73,73,73,-48,73,73,73,73,-22,-23,-24,-25,-49,-50,-51,-52,73,73,73,73,-26,-32,-32,73,-33,-33,]),'NOTEQUALS':([39,42,43,44,45,46,47,50,52,55,56,57,58,59,60,61,77,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,109,115,116,120,],[74,-27,-28,-29,-48,-46,-47,-29,74,74,74,74,74,-48,74,74,74,74,-22,-23,-24,-25,-49,-50,-51,-52,74,74,74,74,-26,-32,-32,74,-33,-33,]),'GREATEREQUALS':([39,42,43,44,45,46,47,50,52,55,56,57,58,59,60,61,77,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,109,115,116,120,],[75,-27,-28,-29,-48,-46,-47,-29,75,75,75,75,75,-48,75,75,75,75,-22,-23,-24,-25,-49,-50,-51,-52,75,75,75,75,-26,-32,-32,75,-33,-33,]),'LESSEQUALS':([39,42,43,44,45,46,47,50,52,55,56,57,58,59,60,61,77,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,109,115,116,120,],[76,-27,-28,-29,-48,-46,-47,-29,76,76,76,76,76,-48,76,76,76,76,-22,-23,-24,-25,-49,-50,-51,-52,76,76,76,76,-26,-32,-32,76,-33,-33,]),'COMMA':([42,43,45,46,47,50,55,91,92,93,94,95,96,97,98,99,100,101,102,103,109,119,120,],[-27,-28,-48,-46,-47,-29,83,-22,-23,-24,-25,-49,-50,-51,-52,-53,-54,-55,-56,-26,-32,126,-33,]),'LBRACKET':([86,87,107,117,133,134,],[113,114,118,124,136,137,]),'ELSE':([127,],[133,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'bloc':([0,113,114,118,124,136,137,],[2,121,122,125,130,138,139,]),'statement':([0,2,14,36,113,114,118,121,122,123,124,125,130,136,137,138,139,],[3,20,40,62,3,3,3,20,20,129,3,20,20,3,3,20,20,]),'TYPE':([0,2,6,14,36,79,113,114,118,121,122,123,124,125,126,130,136,137,138,139,],[13,13,25,13,13,108,13,13,13,13,13,13,13,13,108,13,13,13,13,13,]),'RETURNTYPE':([6,],[24,]),'expression':([14,27,28,31,32,33,34,35,41,64,65,66,67,68,69,70,71,72,73,74,75,76,78,80,83,88,],[39,52,55,56,57,58,60,61,77,90,91,92,93,94,95,96,97,98,99,100,101,102,55,55,55,115,]),'BOOLEAN':([14,27,28,31,32,33,34,35,41,64,65,66,67,68,69,70,71,72,73,74,75,76,78,80,83,88,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'FUNCPARAMS':([28,78,80,83,],[54,105,110,112,]),'PARAMS':([79,126,],[106,132,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> bloc','start',1,'p_start','interpreter.py',119),
  ('bloc -> bloc statement SEMICOLON','bloc',3,'p_bloc','interpreter.py',130),
  ('bloc -> statement SEMICOLON','bloc',2,'p_bloc','interpreter.py',131),
  ('bloc -> bloc SIMPLE_COMMENT','bloc',2,'p_bloc','interpreter.py',132),
  ('bloc -> SIMPLE_COMMENT','bloc',1,'p_bloc','interpreter.py',133),
  ('bloc -> bloc MULTI_COMMENT','bloc',2,'p_bloc','interpreter.py',134),
  ('bloc -> MULTI_COMMENT','bloc',1,'p_bloc','interpreter.py',135),
  ('statement -> FUNCTION RETURNTYPE NAME LPAREN PARAMS RPAREN LBRACKET bloc RBRACKET','statement',9,'p_statement_function','interpreter.py',149),
  ('statement -> FUNCTION RETURNTYPE NAME LPAREN RPAREN LBRACKET bloc RBRACKET','statement',8,'p_statement_function','interpreter.py',150),
  ('PARAMS -> TYPE NAME','PARAMS',2,'p_params','interpreter.py',158),
  ('PARAMS -> TYPE NAME COMMA PARAMS','PARAMS',4,'p_params','interpreter.py',159),
  ('statement -> PRINT LPAREN expression RPAREN','statement',4,'p_statement_expr','interpreter.py',167),
  ('statement -> PRINT LPAREN CHARCHAIN RPAREN','statement',4,'p_statement_expr','interpreter.py',168),
  ('statement -> IF LPAREN expression RPAREN LBRACKET bloc RBRACKET','statement',7,'p_statement_if','interpreter.py',173),
  ('statement -> IF LPAREN expression RPAREN LBRACKET bloc RBRACKET ELSE LBRACKET bloc RBRACKET','statement',11,'p_statement_if','interpreter.py',174),
  ('statement -> WHILE LPAREN expression RPAREN LBRACKET bloc RBRACKET','statement',7,'p_statement_while','interpreter.py',182),
  ('statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LBRACKET bloc RBRACKET','statement',11,'p_statement_for','interpreter.py',187),
  ('statement -> TOAMSCAN LPAREN NAME RPAREN','statement',4,'p_statement_toamScan','interpreter.py',193),
  ('statement -> NAME ASSIGN SCAN LPAREN RPAREN','statement',5,'p_statement_scan','interpreter.py',198),
  ('statement -> TYPE NAME ASSIGN expression','statement',4,'p_statement_assign','interpreter.py',203),
  ('statement -> NAME ASSIGN expression','statement',3,'p_statement_assign','interpreter.py',204),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop_operations','interpreter.py',212),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop_operations','interpreter.py',213),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop_operations','interpreter.py',214),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop_operations','interpreter.py',215),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','interpreter.py',220),
  ('expression -> NUMBER','expression',1,'p_expression_number','interpreter.py',225),
  ('expression -> BOOLEAN','expression',1,'p_expression_boolean','interpreter.py',230),
  ('expression -> NAME','expression',1,'p_expression_name','interpreter.py',235),
  ('FUNCPARAMS -> expression','FUNCPARAMS',1,'p_expression_funcparams','interpreter.py',241),
  ('FUNCPARAMS -> expression COMMA FUNCPARAMS','FUNCPARAMS',3,'p_expression_funcparams','interpreter.py',242),
  ('expression -> NAME LPAREN RPAREN','expression',3,'p_expression_call_function','interpreter.py',251),
  ('expression -> NAME LPAREN FUNCPARAMS RPAREN','expression',4,'p_expression_call_function','interpreter.py',252),
  ('statement -> NAME LPAREN RPAREN','statement',3,'p_statement_call_function','interpreter.py',260),
  ('statement -> NAME LPAREN FUNCPARAMS RPAREN','statement',4,'p_statement_call_function','interpreter.py',261),
  ('TYPE -> INT','TYPE',1,'p_type_definition','interpreter.py',269),
  ('TYPE -> FLOAT','TYPE',1,'p_type_definition','interpreter.py',270),
  ('TYPE -> CHAR','TYPE',1,'p_type_definition','interpreter.py',271),
  ('TYPE -> STRING','TYPE',1,'p_type_definition','interpreter.py',272),
  ('TYPE -> BOOL','TYPE',1,'p_type_definition','interpreter.py',273),
  ('RETURNTYPE -> TYPE','RETURNTYPE',1,'p_return_type','interpreter.py',278),
  ('RETURNTYPE -> VOID','RETURNTYPE',1,'p_return_type','interpreter.py',279),
  ('statement -> RETURN expression','statement',2,'p_return_statement','interpreter.py',284),
  ('statement -> RETURN statement','statement',2,'p_return_statement','interpreter.py',285),
  ('statement -> RETURN','statement',1,'p_return_statement','interpreter.py',286),
  ('BOOLEAN -> TRUE','BOOLEAN',1,'p_boolean_definition','interpreter.py',294),
  ('BOOLEAN -> FALSE','BOOLEAN',1,'p_boolean_definition','interpreter.py',295),
  ('expression -> CHARCHAIN','expression',1,'p_expression_charchain','interpreter.py',300),
  ('expression -> expression AND expression','expression',3,'p_expression_binop_bool','interpreter.py',305),
  ('expression -> expression OR expression','expression',3,'p_expression_binop_bool','interpreter.py',306),
  ('expression -> expression GREATER expression','expression',3,'p_expression_binop_bool','interpreter.py',307),
  ('expression -> expression LESS expression','expression',3,'p_expression_binop_bool','interpreter.py',308),
  ('expression -> expression EQUALS expression','expression',3,'p_expression_binop_bool','interpreter.py',309),
  ('expression -> expression NOTEQUALS expression','expression',3,'p_expression_binop_bool','interpreter.py',310),
  ('expression -> expression GREATEREQUALS expression','expression',3,'p_expression_binop_bool','interpreter.py',311),
  ('expression -> expression LESSEQUALS expression','expression',3,'p_expression_binop_bool','interpreter.py',312),
  ('statement -> NAME INCREMENT','statement',2,'p_expression_incr_decr','interpreter.py',317),
  ('statement -> NAME DECREMENT','statement',2,'p_expression_incr_decr','interpreter.py',318),
  ('statement -> NAME INCREASE expression','statement',3,'p_expression_incr_decr','interpreter.py',319),
  ('statement -> NAME DECREASE expression','statement',3,'p_expression_incr_decr','interpreter.py',320),
]
